300 MODE O:REM Sprites arbeiten nur in Mode O
310 x=l:REM Sprite soll von links nach rechts wandern
320 y=100:REM in Bildschirmmitte
330 h$=bal1 $:REM immer einen HILFSSTRINB verwenden, da bei ,3 nicht zweimal EXChanged werden kann!
340 ÖEXC,x*l,y*l,§h$,3:REM Ball zeichnen
350 CALL &BD19:REM dadurch ist Bewegung besser
360 ÖPUT,x*l,y*l,§h*,1:REM Hintergrund wieder sehreiben, ,1 verwenden da Sprite ja wieder vollstaendig ueberschrieben werden soll
370 x=x+l:IF x<70 THEN 330:REM 1 nach rechts
3S0 END: REM -fertig
Kassette oder Diskette abgelegt. 
Und das können Sie jetzt mit Ihren 
eigenen Programmen MERGEn 
und so z.B. Top-Spiele schreiben. 
Achten Sie dabei darauf, daß das 
ganze Spriteprogramm einmal 
durchlaufen worden sein muß (z.B. 
indem Sie es an den Anfang Ihres 
eigenen Programmes stellen oder 
es als Unterprogramm aufrufen), 
bevor Sie die Sprites oder die folgenden neuen Befehle verwenden 
können:
PUT,x,y, spritename$,a 
GET,x,y, spritename$,a 
EXC,x,y,spritename$,a 
PUT schreibt einfach das Sprite 
auf den Bildschirm, ohne es zu verändern, GET holt den Inhalt des 
Bildschirms ins Sprite (damit wird 
der alte Inhalt überschrieben), und 
EXC tauscht den Inhalt von Sprite 
und Bildschirm aus. X und Y sind 
die Koordinaten, an denen das 
Sprite erscheinen soll, dabei muß 
X von 0-79 und Y von 0-199 gehen 
(diese Koordinaten gelten für MODE 0, in dem man mit den Sprites 
arbeiten sollte). Für X und Y müssen ZAHLEN eingesetzt werden! 
Wenn man trotzdem Variablen verwenden will, muß man mit ihnen irgendeine Rechnung durchführen, 
z.B. +0 oder *1, also: 
x + 0 RICHTIG 
12 RICHTIG, aber 
x FALSCH!!!
Spritename ist der Name des 
Strings, in dem das Sprite steht (ist 
jeweils in einer REM-Zeile über 
den Datazeilen angegeben), und a 
ist eine Zahl (auch hier gilt das für X 
und Y Gesagte), die angibt, wie das 
Sprite auf dem Bildschirm dargestellt werden soll, nämlich:
1 = überschreibt Hintergrund
2 = wird mit Hintergrund ge-OR-t
3 = wird mit Hintergrund gemischt. TMB
